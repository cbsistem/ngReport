(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var Band, DataBand, PageFooter, PageHeader, ReportTitle, Runtime, base,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  base = require('./base');

  Runtime = require('./runtime');

  Band = (function(superClass) {
    extend(Band, superClass);

    Band.getClassName = function() {
      return 'Band';
    };

    function Band(parent) {
      Band.__super__.constructor.call(this, parent);
      this.canShrink = false;
      this.canBreak = false;
      this._fixed = false;
      this._staticBand = false;
      this._childBand = false;
    }

    Band.prototype.render = function(page, caller) {
      var child, h, i, j, len, len1, ny, obj, oy, ref, ref1;
      if (this.name) {
        page.document.engine.scope[this.name] = this;
      }
      h = 0;
      ref = this.children;
      for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        obj = child.render(page);
        if (this._fixed) {
          page.addObject(child._obj);
        }
        h = Math.max(h, obj.bottom);
      }
      h = Math.max(h, this.height);
      if (this._fixed === false) {
        ny = 0;
        if ((h + page._y) > page._maxHeight) {
          oy = page._y;
          page = page.newPage(page.document, caller);
          ny = page._y;
        }
        ref1 = this.children;
        for (j = 0, len1 = ref1.length; j < len1; j++) {
          child = ref1[j];
          if (ny > 0) {
            child._obj.top -= oy;
            child._obj.top += ny;
          }
          page.addObject(child._obj);
          delete child._obj;
        }
      }
      page._y += h;
      return page;
    };

    return Band;

  })(base.BaseObject);

  DataBand = (function(superClass) {
    extend(DataBand, superClass);

    DataBand.getClassName = function() {
      return 'DataBand';
    };

    function DataBand(parent) {
      DataBand.__super__.constructor.call(this, parent);
      this.maxRows = 0;
      this.rowCount = 1;
      this.data = null;
      this._y = 0;
    }

    DataBand.prototype._calcHeight = function() {
      return this.height;
    };

    DataBand.prototype.render = function(page) {
      var c, i, j, len, ref, results, results1, row, rows;
      if (this.data) {
        rows = this.data;
      } else if (this.rowCount) {
        rows = (function() {
          results = [];
          for (var i = 1, ref = this.rowCount; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--){ results.push(i); }
          return results;
        }).apply(this);
      }
      c = 0;
      results1 = [];
      for (j = 0, len = rows.length; j < len; j++) {
        row = rows[j];
        c++;
        page.document.engine.scope['row'] = c;
        page = DataBand.__super__.render.call(this, page, true);
        if (this.maxRows && c >= this.maxRows) {
          break;
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    };

    return DataBand;

  })(Band);

  ReportTitle = (function(superClass) {
    extend(ReportTitle, superClass);

    ReportTitle.getClassName = function() {
      return 'ReportTitle';
    };

    function ReportTitle(parent) {
      ReportTitle.__super__.constructor.call(this, parent);
      this._fixed = true;
      this._staticBand = true;
    }

    return ReportTitle;

  })(Band);

  PageHeader = (function(superClass) {
    extend(PageHeader, superClass);

    PageHeader.getClassName(function() {
      return 'PageHeader';
    });

    function PageHeader(parent) {
      PageHeader.__super__.constructor.call(this, parent);
      this._fixed = true;
      this._staticBand = true;
    }

    return PageHeader;

  })(Band);

  PageFooter = (function(superClass) {
    extend(PageFooter, superClass);

    PageFooter.getClassName = function() {
      return 'PageFooter';
    };

    function PageFooter(parent) {
      PageFooter.__super__.constructor.call(this, parent);
      this._fixed = true;
      this._staticBand = true;
    }

    PageFooter.prototype.render = function(page) {
      var oy;
      oy = page._y;
      page._y = page._maxHeight - this.height;
      PageFooter.__super__.render.call(this, page);
      page._maxHeight -= this.height;
      return page._y = oy;
    };

    return PageFooter;

  })(Band);

  Runtime.registerComponent(Band);

  Runtime.registerComponent(DataBand);

  Runtime.registerComponent(ReportTitle);

  Runtime.registerComponent(PageHeader);

  Runtime.registerComponent(PageFooter);

  module.exports = {
    Band: Band,
    DataBand: DataBand
  };

}).call(this);



},{"./base":2,"./runtime":7}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var BaseObject, BaseView, Runtime,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Runtime = require('./runtime');

  BaseObject = (function() {
    function BaseObject(parent) {
      this.name = null;
      this.parent = parent;
      this.children = [];
      this.exportable = true;
      this.printable = true;
      this.height = 0;
      this.report = parent.report;
    }

    BaseObject.prototype.addObject = function(obj) {
      this.children.push(obj);
      return obj.parent = this;
    };

    BaseObject.prototype.clearCache = function() {
      if (this._cachedData) {
        return delete this._cachedData;
      }
    };

    BaseObject.prototype._build = function(page) {
      var PreparedObject, obj;
      PreparedObject = require('./engine').PreparedObject;
      obj = new PreparedObject(page, this.constructor.getClassName());
      obj.target = this;
      obj.height = this.height;
      return obj;
    };

    BaseObject.prototype.load = function(obj) {
      var child, cls, i, k, len, ref, results, v;
      for (k in obj) {
        v = obj[k];
        if (k !== 'children') {
          this[k] = v;
        }
      }
      if (obj.children) {
        ref = obj.children;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          child = ref[i];
          cls = Runtime.getComponent(child.type);
          obj = new cls(this);
          obj.load(child);
          results.push(this.addObject(obj));
        }
        return results;
      }
    };

    BaseObject.prototype.render = function(page) {
      var child, i, len, ref;
      this._obj = this._build(page);
      ref = this.children;
      for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        child.render(page);
      }
      return this._obj;
    };

    BaseObject.prototype.toHtml = function(obj) {
      return '';
    };

    return BaseObject;

  })();

  BaseView = (function(superClass) {
    extend(BaseView, superClass);

    function BaseView(parent) {
      BaseView.__super__.constructor.call(this, parent);
      this.left = 0;
      this.top = 0;
      this.width = 0;
      this.shiftMode = 'Always';
      this.visible = true;
    }

    BaseView.prototype._build = function(page) {
      var obj;
      obj = BaseView.__super__._build.call(this, page);
      obj.width = this.width;
      obj.top = this.top + page._y;
      obj.bottom = this.top + this.height;
      obj.left = this.left + page._x;
      return obj;
    };

    BaseView.prototype.load = function(obj) {
      return BaseView.__super__.load.call(this, obj);
    };

    return BaseView;

  })(BaseObject);

  module.exports = {
    BaseObject: BaseObject,
    BaseView: BaseView
  };

}).call(this);



},{"./engine":3,"./runtime":7}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var Document, Engine, PreparedObject, PreparedPage, Runtime, base,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  base = require('./base');

  Runtime = require('./runtime');

  Engine = (function() {
    Engine.canvas = null;

    function Engine() {
      this.pageCount = 0;
      this.pageNumber = 0;
      this.scope = Runtime.scope;
      this.expCache = {};
    }

    Engine.prototype.bootstrap = function() {
      if (!Engine.canvas) {
        return Engine.canvas = 1;
      }
    };

    Engine.prototype.run = function(doc) {
      var i, j, len, len1, p, ref, ref1, report;
      report = doc.report;
      ref = report.pages;
      for (i = 0, len = ref.length; i < len; i++) {
        p = ref[i];
        p.render(doc);
      }
      ref1 = report.pages;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        p = ref1[j];
        p.clearCache();
      }
      return console.log('Page count:', doc.pages.length);
    };

    Engine.prototype.compileTemplate = function(s) {
      return Runtime.interpolate(s);
    };

    return Engine;

  })();

  Document = (function() {
    function Document(report1) {
      this.report = report1;
      this.pages = [];
      this.pageCount = 0;
      this.engine = new Engine();
      this.description = this.report.description;
      this.author = this.report.author;
      this.code = this.report.code;
    }

    Document.prototype.addPage = function(page) {
      this.pages.push(page);
      return this.pageCount = page.pageNumber = this.pages.length;
    };

    Document.prototype.save = function() {
      return {};
    };

    return Document;

  })();

  PreparedObject = (function() {
    function PreparedObject(parent1, type) {
      this.parent = parent1;
      if (type) {
        this.type = type;
      }
      this.content = null;
      this.left = 0;
      this.top = 0;
      this.width = 0;
      this.height = 0;
      this._x = 0;
      this._y = 0;
    }

    PreparedObject.prototype.load = function(obj) {
      var k, results, v;
      results = [];
      for (k in obj) {
        v = obj[k];
        results.push(this[k] = v);
      }
      return results;
    };

    return PreparedObject;

  })();

  PreparedPage = (function(superClass) {
    extend(PreparedPage, superClass);

    function PreparedPage(parent, page) {
      PreparedPage.__super__.constructor.call(this, parent);
      this.landscape = false;
      this.children = [];
      this.document = parent;
      this.index = 0;
      this.pageNumber = 0;
      if (page) {
        this.page = page;
        this.width = this.page.width;
        this.height = this.page.height;
      }
      this._y = page.marginTop;
      this._x = page.marginLeft;
      this.calcPrintableArea();
    }

    PreparedPage.prototype.addObject = function(obj) {
      return this.children.push(obj);
    };

    PreparedPage.prototype.calcPrintableArea = function() {
      this._maxHeight = this.page.height - this.page.marginTop - this.page.marginBottom;
      return this._maxWidth = this.page.width - this.page.marginLeft - this.page.marginRight;
    };

    PreparedPage.prototype.newPage = function(document, caller) {
      return this.page.newPage(document, caller);
    };

    return PreparedPage;

  })(PreparedObject);

  module.exports = {
    Engine: Engine,
    PreparedObject: PreparedObject,
    PreparedPage: PreparedPage,
    Document: Document
  };

}).call(this);



},{"./base":2,"./runtime":7}],4:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var Report, Runtime, _bootstrap, loadReport, ngReport, showReport, viewer;

  Runtime = require('./runtime');

  Report = require('./report').Report;

  viewer = require('./viewer');

  ngReport = angular.module('ngReport', []);

  _bootstrap = function(el) {
    if (!el) {
      el = angular.element(Runtime.reportElement);
    }
    angular.bootstrap(el, ['ngReport']);
    el.injector().invoke(function($interpolate) {
      return Runtime.interpolate = $interpolate;
    });
    return Runtime.scope = el.scope();
  };

  loadReport = function(el, file) {
    var doc, rep;
    el = _bootstrap(el);
    rep = new Report(el);
    rep.load(file);
    doc = rep.prepare();
    return doc;
  };

  showReport = function(el, rep, viewerType) {
    var doc, v;
    doc = loadReport(el, rep);
    if (viewerType === 'pdf') {
      v = new viewer.PDFViewer(doc);
    } else {
      v = new viewer.HtmlViewer(doc, el);
    }
    return v.show();
  };

  document.loadReport = loadReport;

  window.showReport = showReport;

}).call(this);



},{"./report":6,"./runtime":7,"./viewer":9}],5:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var Page, PaperSize, PreparedPage, base,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  base = require('./base');

  PaperSize = require('./report').PaperSize;

  Page = (function(superClass) {
    extend(Page, superClass);

    function Page(parent) {
      Page.__super__.constructor.call(this, parent);
      this.report = parent;
      this.marginBottom = 0;
      this.marginLeft = 0;
      this.marginTop = 0;
      this.marginRight = 0;
      this.landscape = false;
      this.width = PaperSize.A4.x;
      this.height = PaperSize.A4.y;
      this._staticBands = null;
      this._dataBands = null;
    }

    Page.prototype._build = function(document) {
      return new PreparedPage(document, this);
    };

    Page.prototype.clearCache = function() {
      var child, i, len, ref, results;
      Page.__super__.clearCache.call(this);
      ref = this.children;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        if (child.clearCache) {
          results.push(child.clearCache());
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    Page.prototype.newPage = function(document, node) {
      var band, i, j, k, len, len1, len2, page, ref, ref1, ref2, results;
      if (!this._staticBands) {
        this._staticBands = [];
        this._dataBands = [];
        ref = this.children;
        for (i = 0, len = ref.length; i < len; i++) {
          band = ref[i];
          if (band._staticBand) {
            this._staticBands.push(band);
          } else {
            this._dataBands.push(band);
          }
        }
      }
      page = this._build(document);
      document.addPage(page);
      this._page = page;
      ref1 = this._staticBands;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        band = ref1[j];
        band.render(page);
      }
      if (node) {
        return page;
      } else {
        ref2 = this._dataBands;
        results = [];
        for (k = 0, len2 = ref2.length; k < len2; k++) {
          band = ref2[k];
          if (!band._childBand) {
            results.push(band.render(page));
          } else {
            results.push(void 0);
          }
        }
        return results;
      }
    };

    Page.prototype.render = function(document) {
      return this.newPage(document);
    };

    return Page;

  })(base.BaseObject);

  module.exports = Page;

  PreparedPage = require('./engine').PreparedPage;

}).call(this);



},{"./base":2,"./engine":3,"./report":6}],6:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var Document, Page, PaperSize, Report, Units, mm;

  Units = (function() {
    function Units() {}

    Units.mm = 3.779527559055;

    Units.cm = 37.79527559055;

    Units.inch = 96;

    return Units;

  })();

  mm = Units.mm;

  PaperSize = (function() {
    function PaperSize() {}

    PaperSize.A3 = {
      x: 297 * mm,
      y: 420 * mm
    };

    PaperSize.A4 = {
      x: 210 * mm,
      y: 297 * mm
    };

    PaperSize.A5 = {
      x: 148 * mm,
      y: 210 * mm
    };

    PaperSize.Custom = null;

    return PaperSize;

  })();

  Report = (function() {
    function Report(element) {
      this.element = element;
      this._curPage = null;
      this._report = null;
      this.units = 'mm';
      this.paperSize = 'A4';
      this.pageWidth = PaperSize.A4.x;
      this.pageHeight = PaperSize.A4.y;
      this.prepared = false;
      this.document = null;
      this.loaded = false;
      this.pages = [];
    }

    Report.prototype.addPage = function(page) {
      return this.pages.push(page);
    };

    Report.prototype.load = function(report) {
      var i, len, p, page, ref, results;
      this._report = report;
      ref = report.pages;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        p = ref[i];
        page = new Page(this);
        this.addPage(page);
        results.push(page.load(p));
      }
      return results;
    };

    Report.prototype.prepare = function() {
      if (!this.prepared) {
        this.document = new Document(this);
        this.document.engine.run(this.document);
        this.prepared = true;
      }
      return this.document;
    };

    return Report;

  })();

  module.exports = {
    Report: Report,
    PaperSize: PaperSize,
    Units: Units
  };

  Document = require('./engine').Document;

  Page = require('./page');

  require('./base');

  require('./band');

  require('./text');

}).call(this);



},{"./band":1,"./base":2,"./engine":3,"./page":5,"./text":8}],7:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var Runtime, report, text;

  Runtime = (function() {
    function Runtime() {}

    Runtime.components = {};

    Runtime.getComponent = function(name) {
      return this.components[name];
    };

    Runtime.registerComponent = function(comp) {
      return this.components[comp.getClassName()] = comp;
    };

    return Runtime;

  })();

  module.exports = Runtime;

  report = require('./report');

  text = require('./text');

}).call(this);



},{"./report":6,"./text":8}],8:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var Runtime, TextObject, base,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  base = require('./base');

  Runtime = require('./runtime');

  TextObject = (function(superClass) {
    extend(TextObject, superClass);

    TextObject.getClassName = function() {
      return 'Text';
    };

    function TextObject(parent) {
      TextObject.__super__.constructor.call(this, parent);
      this.allowExpressions = true;
      this.autoWidth = false;
      this.canGrow = false;
      this.highlight = '';
      this.highlightStyle = {};
      this.format = '';
      this.htmlTags = false;
      this.textAlign = 'Left';
      this.verticalAlign = 'Top';
      this.lineHeight = 0;
      this.nullValue = '';
      this.text = '';
      this.wordWrap = true;
      this.border = {
        top: false,
        right: false,
        bottom: false,
        left: false,
        color: '#000',
        width: 1
      };
      this.font = {
        name: 'Arial',
        size: 10,
        bold: false,
        italic: false
      };
    }

    TextObject.prototype.load = function(obj) {
      TextObject.__super__.load.call(this, obj);
      return this.text = obj.text;
    };

    TextObject.prototype._build = function(page) {
      var obj;
      obj = TextObject.__super__._build.call(this, page);
      if (this.allowExpressions && this.text) {
        if (this._cachedData === void 0) {
          this._cachedData = page.document.engine.compileTemplate(this.text, this);
        }
        obj.content = this._cachedData(page.document.engine.scope);
      } else {
        obj.content = this.text;
      }
      obj.style = {
        'vertical-align': this.verticalAlign.toLowerCase(),
        'text-align': this.textAlign.toLowerCase(),
        'font-family': this.font.name,
        'font-size': this.font.size + 'pt'
      };
      if (this.lineHeight) {
        obj.style['line-height'] = this.lineHeight.toString() + 'px';
      }
      if (this.border.top) {
        obj.style['border-top'] = this.border.width.toString() + 'px solid ' + this.border.color + ';';
      }
      if (this.border.right) {
        obj.style['border-right'] = this.border.width.toString() + 'px solid ' + this.border.color + ';';
      }
      if (this.border.bottom) {
        obj.style['border-bottom'] = this.border.width.toString() + 'px solid ' + this.border.color + ';';
      }
      if (this.border.left) {
        obj.style['border-left'] = this.border.width.toString() + 'px solid ' + this.border.color + ';';
      }
      return obj;
    };

    TextObject.prototype.toHtml = function(obj) {
      var k, ref, s, style, v;
      s = '<div style="';
      style = 'position:absolute;overflow:hidden;display:inline;';
      style += 'left:' + obj.left.toString() + 'px;';
      style += 'top:' + obj.top.toString() + 'px;';
      if (obj.width) {
        style += 'max-width:' + obj.width.toString() + 'px;';
      }
      if (obj.height) {
        style += 'max-height:' + obj.height.toString() + 'px;';
      }
      if (obj.style) {
        ref = obj.style;
        for (k in ref) {
          v = ref[k];
          style += k + ':' + v.toString() + ';';
        }
      }
      s += style + '">' + obj.content + '</div>';
      return s;
    };

    return TextObject;

  })(base.BaseView);

  Runtime.registerComponent(TextObject);

}).call(this);



},{"./base":2,"./runtime":7}],9:[function(require,module,exports){
// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var HtmlViewer, PDFViewer;

  HtmlViewer = (function() {
    function HtmlViewer(document, element) {
      this.document = document;
      this.element = element;
      this.pages = this.document.pages;
      this.pageIndex = -1;
    }

    HtmlViewer.prototype.clearView = function() {
      return this.container.html('');
    };

    HtmlViewer.prototype.show = function() {
      var s, viewer;
      s = this.renderViewer();
      $(this.element).html(s);
      this.container = $('#ng-report-preview-container');
      viewer = this;
      $('#btn-next').click(function() {
        return viewer.next();
      });
      $('#btn-prev').click(function() {
        return viewer.prev();
      });
      return this.setPage(0);
    };

    HtmlViewer.prototype.setPage = function(idx) {
      this.pageIndex = idx;
      this.page = this.pages[idx];
      return this.renderPage();
    };

    HtmlViewer.prototype.first = function() {
      return this.setPage(0);
    };

    HtmlViewer.prototype.last = function() {
      return this.setPage(this.pages.length - 1);
    };

    HtmlViewer.prototype.next = function() {
      if ((this.pageIndex + 1) < this.pages.length) {
        return this.setPage(++this.pageIndex);
      }
    };

    HtmlViewer.prototype.prev = function() {
      if (this.pageIndex - 1 < this.pages.length) {
        return this.setPage(--this.pageIndex);
      }
    };

    HtmlViewer.prototype.renderViewer = function() {
      return '<div class="ng-report-preview-toolbar"><button id="btn-prev"><< Prev</button><button id="btn-next">Next >></button></div><div class="ng-report-preview-report"><div id="ng-report-preview-container"></div></div>';
    };

    HtmlViewer.prototype.renderObject = function(obj) {
      return obj.target.toHtml(obj);
    };

    HtmlViewer.prototype.renderPage = function() {
      var i, len, obj, ref, s;
      s = '<div class="ng-report-preview-page" style="';
      s += 'height:' + this.page.height.toString() + 'px;width:' + this.page.width.toString() + 'px;';
      s += '">';
      ref = this.page.children;
      for (i = 0, len = ref.length; i < len; i++) {
        obj = ref[i];
        s += this.renderObject(obj);
      }
      s += '</div>';
      this.container.html(s);
      return s;
    };

    return HtmlViewer;

  })();

  PDFViewer = (function() {
    function PDFViewer(element) {
      this.element = element;
    }

    PDFViewer.prototype.show = function() {};

    return PDFViewer;

  })();

  module.exports = {
    HtmlViewer: HtmlViewer,
    PDFViewer: PDFViewer
  };

}).call(this);



},{}]},{},[4]);
