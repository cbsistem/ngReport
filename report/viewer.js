// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var HtmlViewer, PDFViewer;

  HtmlViewer = (function() {
    function HtmlViewer(document, element) {
      this.document = document;
      this.element = element;
      this.pages = this.document.pages;
      this.pageIndex = -1;
    }

    HtmlViewer.prototype.clearView = function() {
      return this.container.html('');
    };

    HtmlViewer.prototype.show = function() {
      var s, viewer;
      s = this.renderViewer();
      $(this.element).html(s);
      this.container = $('#ng-report-preview-container');
      viewer = this;
      $('#btn-next').click(function() {
        return viewer.next();
      });
      $('#btn-prev').click(function() {
        return viewer.prev();
      });
      return this.setPage(0);
    };

    HtmlViewer.prototype.setPage = function(idx) {
      this.pageIndex = idx;
      this.page = this.pages[idx];
      return this.renderPage();
    };

    HtmlViewer.prototype.first = function() {
      return this.setPage(0);
    };

    HtmlViewer.prototype.last = function() {
      return this.setPage(this.pages.length - 1);
    };

    HtmlViewer.prototype.next = function() {
      if ((this.pageIndex + 1) < this.pages.length) {
        return this.setPage(++this.pageIndex);
      }
    };

    HtmlViewer.prototype.prev = function() {
      if (this.pageIndex - 1 < this.pages.length) {
        return this.setPage(--this.pageIndex);
      }
    };

    HtmlViewer.prototype.renderViewer = function() {
      return '<div class="ng-report-preview-toolbar"><button id="btn-prev"><< Prev</button><button id="btn-next">Next >></button></div><div class="ng-report-preview-report"><div id="ng-report-preview-container"></div></div>';
    };

    HtmlViewer.prototype.renderObject = function(obj) {
      return obj.target.toHtml(obj);
    };

    HtmlViewer.prototype.renderPage = function() {
      var i, len, obj, ref, s;
      s = '<div class="ng-report-preview-page" style="';
      s += 'height:' + this.page.height.toString() + 'px;width:' + this.page.width.toString() + 'px;';
      s += '">';
      ref = this.page.children;
      for (i = 0, len = ref.length; i < len; i++) {
        obj = ref[i];
        s += this.renderObject(obj);
      }
      s += '</div>';
      this.container.html(s);
      return s;
    };

    return HtmlViewer;

  })();

  PDFViewer = (function() {
    function PDFViewer(element) {
      this.element = element;
    }

    PDFViewer.prototype.show = function() {};

    return PDFViewer;

  })();

  module.exports = {
    HtmlViewer: HtmlViewer,
    PDFViewer: PDFViewer
  };

}).call(this);

//# sourceMappingURL=viewer.js.map
